# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

<<<<<<< HEAD:azure-pipelines-1.yml
trigger: none
#- master
=======
trigger:
- app-jar-naming
>>>>>>> kotlin-slot-scaling-example:azure-pipelines-app-deploy-task.yml

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'bootJar'
  - script: |
      mv ./kotlin-rest-example.jar ./app.jar
    displayName: Rename jar for execution
    name: rename_jar_for_execution
    workingDirectory: '$(Build.SourcesDirectory)/build/libs'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build/libs'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true
  - task: AzureRmWebAppDeployment@4
    inputs:
<<<<<<< HEAD:azure-pipelines-1.yml
      azureSubscription: 'Visual Studio Enterprise Subscription (fc099a2b-6d5f-40bb-a8da-c87f37d942f9)'
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az webapp deployment source config-zip -g american-airlines-demo -n kotlin-example-zip --src $(System.DefaultWorkingDirectory)/$(Build.BuildId).zip
=======
      ConnectionType: 'AzureRM'
      azureSubscription: 'Visual Studio Enterprise Subscription (fc099a2b-6d5f-40bb-a8da-c87f37d942f9)'
      appType: 'webAppLinux'
      WebAppName: 'kotlin-rest-example-paid'
      packageForLinux: '$(System.DefaultWorkingDirectory)/*.zip'
      RuntimeStack: 'JAVA|8-jre8'
>>>>>>> kotlin-slot-scaling-example:azure-pipelines-app-deploy-task.yml
